<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wangch</title>
  
  <subtitle>Wangch&#39;s BLOG</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sunshinehub.github.io/"/>
  <updated>2018-10-25T06:31:14.402Z</updated>
  <id>https://sunshinehub.github.io/</id>
  
  <author>
    <name>Wangch</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring boot + mongodb 集成</title>
    <link href="https://sunshinehub.github.io/2018/09/28/Spring%20boot%20+%20mongodb%20%E9%9B%86%E6%88%90%20/"/>
    <id>https://sunshinehub.github.io/2018/09/28/Spring boot + mongodb 集成 /</id>
    <published>2018-09-28T10:36:53.000Z</published>
    <updated>2018-10-25T06:31:14.402Z</updated>
    
    <content type="html"><![CDATA[<p>Spring Boot对各种流行的数据源都进行了封装，当然也包括了mongodb,下面介绍如何在spring boot中使用mongodb：</p><h1 id="pom包配置"><a href="#pom包配置" class="headerlink" title="pom包配置"></a>pom包配置</h1><p>pom包里面添加spring-boot-starter-data-mongodb包引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">&lt;dependency&gt; </span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-data-mongodb&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt; </span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><h1 id="在application-properties中添加配置"><a href="#在application-properties中添加配置" class="headerlink" title="在application.properties中添加配置"></a>在application.properties中添加配置</h1><p><code>spring.data.mongodb.uri=mongodb://admin:123456@localhost:27017/tj_workorder</code></p><h2 id="多个IP集群可以采用以下配置："><a href="#多个IP集群可以采用以下配置：" class="headerlink" title="多个IP集群可以采用以下配置："></a>多个IP集群可以采用以下配置：</h2><p><code>spring.data.mongodb.uri=mongodb://user:pwd@ip1:port1,ip2:port2/database</code></p><h1 id="创建数据实体"><a href="#创建数据实体" class="headerlink" title="创建数据实体"></a>创建数据实体</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line">package com.tj.workorder.domain.mongo;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import com.tj.workorder.domain.mongo.util.MongoQueryUtil;</span><br><span class="line">import java.util.List;</span><br><span class="line">import com.tj.workorder.util.QueryCondition;</span><br><span class="line"></span><br><span class="line">import lombok.Getter;</span><br><span class="line">import lombok.Setter;</span><br><span class="line">import org.apache.commons.lang3.StringUtils;</span><br><span class="line">import org.springframework.data.annotation.Id;</span><br><span class="line">import org.springframework.data.mongodb.core.mapping.Document;</span><br><span class="line">import org.springframework.data.mongodb.core.mapping.Field;</span><br><span class="line">import org.springframework.data.mongodb.core.query.Criteria;</span><br><span class="line">import org.springframework.data.mongodb.core.query.Query;</span><br><span class="line">import org.springframework.data.mongodb.core.query.Update;</span><br><span class="line"></span><br><span class="line">import com.tj.workorder.util.QueryCondition;</span><br><span class="line"></span><br><span class="line">import lombok.Getter;</span><br><span class="line">import lombok.Setter;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * @author wangch</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">@Setter</span><br><span class="line">@Getter</span><br><span class="line">@Document(collection = &quot;workOrderDefault&quot;)</span><br><span class="line">public class WorkOrderDefault extends QueryCondition&#123;</span><br><span class="line">private static final long serialVersionUID = -1L;</span><br><span class="line"></span><br><span class="line">@Id</span><br><span class="line">private String  id;</span><br><span class="line">/**</span><br><span class="line"> * 工单标题</span><br><span class="line"> * */</span><br><span class="line">private String workOrderName;</span><br><span class="line">/**</span><br><span class="line"> * 字段对象</span><br><span class="line"> * */</span><br><span class="line">private List&lt;WorkOrderDictionary&gt; dictionary;</span><br><span class="line">/**</span><br><span class="line"> * 是否可编辑  0：不可编辑    1：可编辑</span><br><span class="line"> *</span><br><span class="line"> * */</span><br><span class="line">private Integer editable;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 工单状态  0：关闭   1：开启</span><br><span class="line"> * */</span><br><span class="line">private Integer status;</span><br><span class="line"></span><br><span class="line">public Criteria[] queryReady()&#123;</span><br><span class="line">return MongoQueryUtil.queryReady(this);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Update updateByIdReady()&#123;</span><br><span class="line">return MongoQueryUtil.updateByIdReady(this);</span><br><span class="line">/*Update update = new Update();</span><br><span class="line">List&lt;WorkOrderDictionary&gt; dictionary = this.getDictionary();</span><br><span class="line">if (this.getStatus()!=null) &#123;</span><br><span class="line">update.set(&quot;status&quot;,this.getStatus());</span><br><span class="line">&#125;</span><br><span class="line">if (this.getEditable()!=null) &#123;</span><br><span class="line">update.set(&quot;editable&quot;,this.getEditable());</span><br><span class="line">&#125;</span><br><span class="line">if (StringUtils.isNotEmpty(this.getWorkOrderName())) &#123;</span><br><span class="line">update.set(&quot;workOrderName&quot;,this.getWorkOrderName());</span><br><span class="line">&#125;</span><br><span class="line">if (dictionary!=null&amp;&amp;dictionary.size()&gt;0) &#123;</span><br><span class="line">update.set(&quot;dictionary&quot;,dictionary);</span><br><span class="line">&#125;*/</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*public Criteria[] queryReady(WorkOrderDefault workOrderDefault) &#123;</span><br><span class="line">List&lt;Criteria&gt; criteriaList = new ArrayList&lt;Criteria&gt;();</span><br><span class="line">if (workOrderDefault.getId() != null) &#123;</span><br><span class="line">criteriaList.add(Criteria.where(&quot;_id&quot;).is(workOrderDefault.getId()));</span><br><span class="line">&#125;</span><br><span class="line">if (StringUtils.isNotEmpty(workOrderDefault.getWorkOrderName())) &#123;</span><br><span class="line">criteriaList.add(Criteria.where(&quot;workOrderName&quot;).is(workOrderDefault.getWorkOrderName()));</span><br><span class="line">&#125;</span><br><span class="line">if (workOrderDefault.getStatus() != null) &#123;</span><br><span class="line">criteriaList.add(Criteria.where(&quot;status&quot;).is(workOrderDefault.getStatus()));</span><br><span class="line">&#125;</span><br><span class="line">if (workOrderDefault.getEditable() != null) &#123;</span><br><span class="line">criteriaList.add(Criteria.where(&quot;editable&quot;).is(workOrderDefault.getEditable()));</span><br><span class="line">&#125;</span><br><span class="line">Criteria[] criteria = criteriaList.toArray(new Criteria[]&#123;&#125;);</span><br><span class="line">return criteria;</span><br><span class="line">&#125;*/</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">package com.tj.workorder.domain.mongo.util;</span><br><span class="line"></span><br><span class="line">import com.tj.workorder.web.controller.BaseController;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.data.annotation.Id;</span><br><span class="line">import org.springframework.data.mongodb.core.query.Criteria;</span><br><span class="line">import org.springframework.data.mongodb.core.query.Update;</span><br><span class="line"></span><br><span class="line">import java.lang.reflect.InvocationTargetException;</span><br><span class="line">import java.lang.reflect.Method;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">/**</span><br><span class="line"> * 实体类查询、更新条件工具类</span><br><span class="line"> * */</span><br><span class="line">public class MongoQueryUtil &#123;</span><br><span class="line"></span><br><span class="line">    protected static final Logger logger = LoggerFactory.getLogger(BaseController.class) ;</span><br><span class="line">    public static Criteria[] queryReady(Object o) &#123;</span><br><span class="line">        List&lt;Criteria&gt; criteriaList = new ArrayList&lt;Criteria&gt;();</span><br><span class="line">        try &#123;</span><br><span class="line">            Method[] methods = o.getClass().getDeclaredMethods();</span><br><span class="line">            for (int i = 0; i &lt; methods.length; i++) &#123;</span><br><span class="line">                Method method = methods[i];</span><br><span class="line">                if (method.getName().startsWith(&quot;get&quot;)) &#123;</span><br><span class="line">                    String field = method.getName().substring(3, method.getName().length());</span><br><span class="line">                    field = field.substring(0, 1).toLowerCase() + field.substring(1, field.length());</span><br><span class="line">                    if(o.getClass().getDeclaredField(field).getAnnotation(Id.class) != null)&#123;</span><br><span class="line">                        field = &quot;_id&quot;;</span><br><span class="line">                    &#125;</span><br><span class="line">                    Object invoke = method.invoke(o);</span><br><span class="line">                    if (invoke != null) &#123;</span><br><span class="line">                        criteriaList.add(Criteria.where(field).is(invoke));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (IllegalAccessException | InvocationTargetException | NoSuchFieldException e) &#123;</span><br><span class="line">            logger.error(&quot;查询失败&quot;,e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        return criteriaList.size() == 0 ? null : criteriaList.toArray(new Criteria[]&#123;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    public static Update updateByIdReady(Object o)&#123;</span><br><span class="line">        Update update = new Update();</span><br><span class="line">        try &#123;</span><br><span class="line">        Method[] methods = o.getClass().getDeclaredMethods();</span><br><span class="line">        for (int i = 0; i &lt; methods.length; i++) &#123;</span><br><span class="line">            Method method = methods[i];</span><br><span class="line">            if (method.getName().startsWith(&quot;get&quot;)) &#123;</span><br><span class="line">                String field = method.getName().substring(3, method.getName().length());</span><br><span class="line">                field = field.substring(0, 1).toLowerCase() + field.substring(1, field.length());</span><br><span class="line">                if(o.getClass().getDeclaredField(field).getAnnotation(Id.class) != null)&#123;</span><br><span class="line">                    field = &quot;_id&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                Object invoke = method.invoke(o);</span><br><span class="line">                if (invoke != null) &#123;</span><br><span class="line">                    update.set(field, invoke);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; catch (IllegalAccessException | InvocationTargetException | NoSuchFieldException e) &#123;</span><br><span class="line">        logger.error(&quot;更新失败&quot;,e);</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">        return update;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="创建Controller"><a href="#创建Controller" class="headerlink" title="创建Controller"></a>创建Controller</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">package com.tj.workorder.web.controller;</span><br><span class="line"></span><br><span class="line">import com.github.pagehelper.PageInfo;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.data.domain.Page;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line">import com.mongodb.WriteResult;</span><br><span class="line">import com.tj.workorder.domain.mongo.WorkOrderDefault;</span><br><span class="line">import com.tj.workorder.service.WorkOrderService;</span><br><span class="line">import com.tj.workorder.util.UrlUtil;</span><br><span class="line">import com.tj.common.lang.JsonResultBuilder.JsonResult;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(value = &quot;/workOrder&quot;)</span><br><span class="line">public class WorkOrderController extends BaseController &#123;</span><br><span class="line">@Autowired</span><br><span class="line">private WorkOrderService workOrderService;</span><br><span class="line"></span><br><span class="line">@RequestMapping(value = &quot;/saveWorkOrder&quot;, produces = &quot;application/json;charset=utf-8&quot;)</span><br><span class="line">public JsonResult&lt;WorkOrderDefault&gt; saveWorkOrder(WorkOrderDefault workOrder)&#123;</span><br><span class="line">        logger.info(-----------模拟保存数据开始-----------)</span><br><span class="line">workOrder.setEditable(1);</span><br><span class="line">//默认关闭</span><br><span class="line">        workOrder.setStatus(0);</span><br><span class="line">        </span><br><span class="line">List&lt;WorkOrderDictionary&gt; list = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt;4 ; i++) &#123;</span><br><span class="line">WorkOrderDictionary dictionary = new WorkOrderDictionary(&quot;测试字段&quot;+i,&quot;text&quot; , 1,1,&quot;test&quot;,i+1);</span><br><span class="line">if (i==2)&#123;</span><br><span class="line">dictionary.setType(&quot;select&quot;);</span><br><span class="line">dictionary.setValue(&quot;测试1,测试2&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">list.add(dictionary);</span><br><span class="line">&#125;</span><br><span class="line">workOrder.setDictionary(list);</span><br><span class="line">        String url = UrlUtil.createUrl(11L,&quot;&quot;);</span><br><span class="line">        workOrder.setUrl(url);</span><br><span class="line">        logger.info(-----------模拟保存数据结束-----------)</span><br><span class="line">        WorkOrderDefault workOrderDefault = workOrderService.save(workOrder);</span><br><span class="line">        return super.sucessAjax(&quot;新建工单成功&quot;,workOrderDefault);</span><br><span class="line">&#125;</span><br><span class="line">    /**</span><br><span class="line">     * 简单分页查询（不带查询条件）</span><br><span class="line">     * */</span><br><span class="line">    @RequestMapping(value = &quot;/queryWorkOrder&quot;, produces = &quot;application/json;charset=utf-8&quot;)</span><br><span class="line">    public JsonResult&lt;Page&lt;WorkOrderDefault&gt;&gt; queryWorkOrder(WorkOrderDefault workOrder) throws Exception&#123;</span><br><span class="line">        if (workOrder.getPageNo() == null) &#123;</span><br><span class="line">            workOrder.setPageNo(1);</span><br><span class="line">            workOrder.setPageSize(10);</span><br><span class="line">        &#125;</span><br><span class="line">        Page&lt;WorkOrderDefault&gt;   workOrderDefaults = workOrderService.findPage(workOrder.getPageNo(), workOrder.getPageSize(),null);</span><br><span class="line">        return super.sucessAjax(&quot;成功&quot;,workOrderDefaults);</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 复杂分页查询（带查询条件）</span><br><span class="line">     * */</span><br><span class="line">    @RequestMapping(value = &quot;/queryWorkOrders&quot;, produces = &quot;application/json;charset=utf-8&quot;)</span><br><span class="line">    public JsonResult&lt;PageInfo&lt;WorkOrderDefault&gt;&gt; queryWorkOrders(WorkOrderDefault workOrder) throws Exception&#123;</span><br><span class="line">        workOrder.setPageSize(2);</span><br><span class="line">        workOrder.initPagination();</span><br><span class="line">        PageInfo&lt;WorkOrderDefault&gt; pagination = workOrderService.queryWorkOrderByPage(workOrder);</span><br><span class="line">        return super.sucessAjax(&quot;成功&quot;,pagination);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 修改工单字段</span><br><span class="line">     * */</span><br><span class="line">    @RequestMapping(value = &quot;/updateWorkOrder&quot;, produces = &quot;application/json;charset=utf-8&quot;)</span><br><span class="line">    public JsonResult&lt;WriteResult&gt; updateWorkOrderById(WorkOrderDefault workOrder) throws Exception&#123;</span><br><span class="line">        WriteResult result = workOrderService.update(workOrder);</span><br><span class="line">        if (result.getN()&gt;0) &#123;</span><br><span class="line">            return super.sucessAjax(&quot;修改&quot;+result.getN()+&quot;条记录&quot;,result);</span><br><span class="line">        &#125;</span><br><span class="line">        return super.failureAjax(&quot;没有发现修改项&quot;,null);</span><br><span class="line">    &#125;</span><br><span class="line">    @RequestMapping(value = &quot;/deleteWorkOrder&quot;, produces = &quot;application/json;charset=utf-8&quot;)</span><br><span class="line">    public JsonResult&lt;Void&gt; deleteWorkOrderById(String id) throws Exception&#123;</span><br><span class="line">        if (id != null) &#123;</span><br><span class="line">            workOrderService.delete(id);</span><br><span class="line">            return super.sucessAjax(&quot;删除成功&quot;,null);</span><br><span class="line">        &#125;</span><br><span class="line">        return super.failureAjax(&quot;没有发现修改项&quot;,null);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="创建BaseService"><a href="#创建BaseService" class="headerlink" title="创建BaseService"></a>创建BaseService</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">package com.tj.workorder.service.base.impl;</span><br><span class="line"></span><br><span class="line">import com.tj.workorder.service.base.BaseMongoService;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.data.domain.Page;</span><br><span class="line">import org.springframework.data.domain.PageRequest;</span><br><span class="line">import org.springframework.data.mongodb.repository.MongoRepository;</span><br><span class="line"></span><br><span class="line">import java.io.Serializable;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public class BaseMongoServiceImpl&lt;T,ID extends Serializable&gt; implements BaseMongoService&lt;T ,ID&gt;&#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    private MongoRepository&lt;T,ID&gt; mongoRepository;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public &lt;S extends T&gt; S save(S var1) &#123;</span><br><span class="line">        return (S) mongoRepository.save(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;T&gt; findAll() &#123;</span><br><span class="line">        return mongoRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Page&lt;T&gt; findAll(Integer pageNo, Integer size) &#123;</span><br><span class="line">        return mongoRepository.findAll(new PageRequest(pageNo-1,size));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public long count() &#123;</span><br><span class="line">        return mongoRepository.count();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void delete(ID var1) &#123;</span><br><span class="line">        mongoRepository.delete(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void delete(T var1) &#123;</span><br><span class="line">        mongoRepository.delete(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void deleteAll() &#123;</span><br><span class="line">        mongoRepository.deleteAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="创建Service接口"><a href="#创建Service接口" class="headerlink" title="创建Service接口"></a>创建Service接口</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">package com.tj.workorder.service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import com.github.pagehelper.PageInfo;</span><br><span class="line">import com.mongodb.WriteResult;</span><br><span class="line">import com.tj.workorder.domain.mongo.WorkOrderDefault;</span><br><span class="line">import com.tj.workorder.service.base.BaseMongoService;</span><br><span class="line">import org.springframework.data.domain.Page;</span><br><span class="line">import org.springframework.data.domain.Sort;</span><br><span class="line"></span><br><span class="line">public interface WorkOrderService extends BaseMongoService&lt;WorkOrderDefault , String&gt;&#123;</span><br><span class="line"></span><br><span class="line">    public Page&lt;WorkOrderDefault&gt; findPage(Integer pageNo , Integer pageSize , Sort sort) throws Exception;</span><br><span class="line">    /**</span><br><span class="line">    *分页复杂查询</span><br><span class="line">    * */</span><br><span class="line">    public PageInfo&lt;WorkOrderDefault&gt; queryWorkOrderByPage(WorkOrderDefault workOrder) throws Exception;</span><br><span class="line">    /**</span><br><span class="line">     * 更新</span><br><span class="line">     * */</span><br><span class="line">    public WriteResult update (WorkOrderDefault workOrder) throws Exception;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="创建实现类"><a href="#创建实现类" class="headerlink" title="创建实现类"></a>创建实现类</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">package com.tj.workorder.service.impl;</span><br><span class="line"></span><br><span class="line">import com.github.pagehelper.PageInfo;</span><br><span class="line">import com.mongodb.WriteResult;</span><br><span class="line">import com.tj.workorder.dao.WorkOrderDao;</span><br><span class="line">import com.tj.workorder.domain.mongo.WorkOrderDefault;</span><br><span class="line">import com.tj.workorder.service.WorkOrderService;</span><br><span class="line">import com.tj.workorder.service.base.impl.BaseMongoServiceImpl;</span><br><span class="line">import com.tj.workorder.util.PageInfoBuilder;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.data.domain.PageRequest;</span><br><span class="line">import org.springframework.data.domain.Pageable;</span><br><span class="line">import org.springframework.data.domain.Sort;</span><br><span class="line">import org.springframework.data.mongodb.core.MongoOperations;</span><br><span class="line">import org.springframework.data.mongodb.core.query.Criteria;</span><br><span class="line">import org.springframework.data.mongodb.core.query.Query;</span><br><span class="line">import org.springframework.data.mongodb.core.query.Update;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@Service(&quot;workOrderService&quot;)</span><br><span class="line">public class WorkOrderServiceImpl extends BaseMongoServiceImpl&lt;WorkOrderDefault ,String&gt; implements WorkOrderService &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    MongoOperations mongoTemplate;</span><br><span class="line">    @Autowired</span><br><span class="line">    private WorkOrderDao workOrderDao;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public org.springframework.data.domain.Page&lt;WorkOrderDefault&gt; findPage(Integer pageNo, Integer pageSize , Sort sort) throws Exception&#123;</span><br><span class="line"></span><br><span class="line">        Pageable pageable = new PageRequest(pageNo-1,pageSize,sort);</span><br><span class="line">        return workOrderDao.findAll(pageable);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public PageInfo&lt;WorkOrderDefault&gt; queryWorkOrderByPage(WorkOrderDefault workOrder) throws Exception&#123;</span><br><span class="line">        Query query = new Query();</span><br><span class="line">        Criteria[] queryCriteria = workOrder.queryReady();</span><br><span class="line">        if (queryCriteria.length&gt;0) &#123;</span><br><span class="line">            Criteria criteria = new Criteria().andOperator(queryCriteria);</span><br><span class="line">            query.addCriteria(criteria);</span><br><span class="line">        &#125;</span><br><span class="line">        query.skip(workOrder.getStart());</span><br><span class="line">        query.limit(workOrder.getOffset());</span><br><span class="line">        List&lt;WorkOrderDefault&gt; workOrderDefaults = mongoTemplate.find(query, WorkOrderDefault.class);</span><br><span class="line">        long count = mongoTemplate.count(query, WorkOrderDefault.class);</span><br><span class="line">        PageInfo pageInfo = new PageInfoBuilder&lt;WorkOrderDefault&gt;().build(workOrderDefaults, count, workOrder.getPageSize(),workOrder.getPageNo());</span><br><span class="line">        return pageInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public WriteResult update(WorkOrderDefault workOrder) throws Exception&#123;</span><br><span class="line">        Query query  = new Query(Criteria.where(&quot;_id&quot;).is(workOrder.getId()));</span><br><span class="line">        Update update = workOrder.updateByIdReady(query);</span><br><span class="line">        WriteResult writeResult = mongoTemplate.updateFirst(query, update, WorkOrderDefault.class);</span><br><span class="line">        return writeResult;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="封装分页的工具类"><a href="#封装分页的工具类" class="headerlink" title="封装分页的工具类"></a>封装分页的工具类</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">package com.tj.workorder.util;</span><br><span class="line"></span><br><span class="line">import com.github.pagehelper.PageInfo;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 封装分页工具类</span><br><span class="line"> * </span><br><span class="line"> * @author wangch</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class PageInfoBuilder&lt;T&gt; &#123;</span><br><span class="line">public  PageInfo&lt;T&gt; build(List&lt;T&gt; list , long count , Integer pageSize , Integer currentPage , int navigatePages)&#123;</span><br><span class="line">PageInfo&lt;T&gt; pagination = new PageInfo&lt;&gt;();</span><br><span class="line">pagination.setList(list);</span><br><span class="line">pagination.setTotal(count);</span><br><span class="line">pagination.setPageSize(pageSize);</span><br><span class="line">pagination.setPageNum(currentPage);</span><br><span class="line">pagination.setNavigatePages(navigatePages);</span><br><span class="line">pagination.setSize(list.size());</span><br><span class="line">int totalPage = calculateTotalPage(count, pageSize);</span><br><span class="line">pagination.setPages(totalPage);</span><br><span class="line">pagination.setNavigatepageNums(calcNavigatepageNums(totalPage,navigatePages,currentPage));</span><br><span class="line">calcPage(pagination);</span><br><span class="line">judgePageBoudary(pagination);</span><br><span class="line">return pagination;</span><br><span class="line">&#125;</span><br><span class="line">public PageInfo&lt;T&gt; build(List&lt;T&gt; list , long count , Integer pageSize , Integer currentPage)&#123;</span><br><span class="line">return build(list,count,pageSize,currentPage,5);</span><br><span class="line">&#125;</span><br><span class="line">private static int calculateTotalPage(long count , Integer pageSize)&#123;</span><br><span class="line">int totalPage = 0 ;</span><br><span class="line">if(pageSize==0)&#123;</span><br><span class="line">totalPage = 1;</span><br><span class="line">return totalPage;</span><br><span class="line">&#125;</span><br><span class="line">int totalCount = Long.valueOf(count).intValue();</span><br><span class="line">// 计算总页数</span><br><span class="line">totalPage = totalCount%pageSize == 0 ? totalCount/pageSize : totalCount/pageSize+1;</span><br><span class="line">return totalPage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private static int[] calcNavigatepageNums(int pages , int navigatePages , int pageNum) &#123;</span><br><span class="line">int i;</span><br><span class="line">int[] navigatepageNums;</span><br><span class="line">if (pages &lt;= navigatePages) &#123;</span><br><span class="line">navigatepageNums = new int[pages];</span><br><span class="line"></span><br><span class="line">for(i = 0; i &lt; pages; ++i) &#123;</span><br><span class="line">navigatepageNums[i] = i + 1;</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">navigatepageNums = new int[navigatePages];</span><br><span class="line">i = pageNum - navigatePages / 2;</span><br><span class="line">int endNum = pageNum + navigatePages / 2;</span><br><span class="line">//            int i;</span><br><span class="line">if (i &lt; 1) &#123;</span><br><span class="line">i = 1;</span><br><span class="line"></span><br><span class="line">for(i = 0; i &lt; navigatePages; ++i) &#123;</span><br><span class="line">navigatepageNums[i] = i++;</span><br><span class="line">&#125;</span><br><span class="line">&#125; else if (endNum &gt; pages) &#123;</span><br><span class="line">endNum = pages;</span><br><span class="line"></span><br><span class="line">for(i = navigatePages - 1; i &gt;= 0; --i) &#123;</span><br><span class="line">navigatepageNums[i] = endNum--;</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">for(i = 0; i &lt; navigatePages; ++i) &#123;</span><br><span class="line">navigatepageNums[i] = i++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return navigatepageNums;</span><br><span class="line">&#125;</span><br><span class="line">private static void calcPage(PageInfo pageInfo) &#123;</span><br><span class="line">int[] navigatepageNums = pageInfo.getNavigatepageNums();</span><br><span class="line">if (navigatepageNums != null &amp;&amp; navigatepageNums.length &gt; 0) &#123;</span><br><span class="line">pageInfo.setNavigateFirstPage(navigatepageNums[0]);</span><br><span class="line">pageInfo.setNavigateLastPage(navigatepageNums[navigatepageNums.length-1]);</span><br><span class="line">if (pageInfo.getPageNum() &gt; 1) &#123;</span><br><span class="line">pageInfo.setPrePage(pageInfo.getPageNum()-1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (pageInfo.getPageNum() &lt;pageInfo.getPages()) &#123;</span><br><span class="line">pageInfo.setNextPage(pageInfo.getPageNum()+1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">private static void judgePageBoudary(PageInfo pageInfo) &#123;</span><br><span class="line">pageInfo.setIsFirstPage(pageInfo.getPageNum() == 1);</span><br><span class="line">pageInfo.setIsLastPage(pageInfo.getPageNum() == pageInfo.getPages() || pageInfo.getPages() == 0);</span><br><span class="line">pageInfo.setHasPreviousPage(pageInfo.getPageNum()&gt;1);</span><br><span class="line">pageInfo.setHasNextPage(pageInfo.getPageNum()&lt;pageInfo.getPages());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="创建Dao"><a href="#创建Dao" class="headerlink" title="创建Dao"></a>创建Dao</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">package com.tj.workorder.dao;</span><br><span class="line"></span><br><span class="line">import com.tj.workorder.domain.mongo.WorkOrderDefault;</span><br><span class="line">import org.springframework.data.mongodb.repository.MongoRepository;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * @author Wangch</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public interface WorkOrderDao extends MongoRepository&lt;WorkOrderDefault,String&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>访问地址：</p><blockquote></blockquote><p> <a href="http://localhost:2080/tj-workorder-web/workOrder/queryWorkOrders" target="_blank" rel="noopener">http://localhost:2080/tj-workorder-web/workOrder/queryWorkOrders</a><br>最终结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;msg&quot;:&quot;成功&quot;,</span><br><span class="line">    &quot;success&quot;:true,</span><br><span class="line">    &quot;data&quot;:&#123;</span><br><span class="line">        &quot;pageNum&quot;:1,</span><br><span class="line">        &quot;pageSize&quot;:2,</span><br><span class="line">        &quot;size&quot;:2,</span><br><span class="line">        &quot;startRow&quot;:0,</span><br><span class="line">        &quot;endRow&quot;:0,</span><br><span class="line">        &quot;total&quot;:4,</span><br><span class="line">        &quot;pages&quot;:2,</span><br><span class="line">        &quot;list&quot;:[</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;pageNo&quot;:1,</span><br><span class="line">                &quot;pageSize&quot;:10,</span><br><span class="line">                &quot;start&quot;:null,</span><br><span class="line">                &quot;offset&quot;:null,</span><br><span class="line">                &quot;id&quot;:&quot;5a0bb3dce9d75832105bb9fa&quot;,</span><br><span class="line">                &quot;workOrderName&quot;:null,</span><br><span class="line">                &quot;dictionary&quot;:[</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;title&quot;:&quot;测试字段0&quot;,</span><br><span class="line">                        &quot;type&quot;:&quot;text&quot;,</span><br><span class="line">                        &quot;isRequired&quot;:1,</span><br><span class="line">                        &quot;visible&quot;:1,</span><br><span class="line">                        &quot;value&quot;:&quot;test&quot;,</span><br><span class="line">                        &quot;sort&quot;:1</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;title&quot;:&quot;测试字段1&quot;,</span><br><span class="line">                        &quot;type&quot;:&quot;text&quot;,</span><br><span class="line">                        &quot;isRequired&quot;:1,</span><br><span class="line">                        &quot;visible&quot;:1,</span><br><span class="line">                        &quot;value&quot;:&quot;test&quot;,</span><br><span class="line">                        &quot;sort&quot;:2</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;title&quot;:&quot;测试字段2&quot;,</span><br><span class="line">                        &quot;type&quot;:&quot;select&quot;,</span><br><span class="line">                        &quot;isRequired&quot;:1,</span><br><span class="line">                        &quot;visible&quot;:1,</span><br><span class="line">                        &quot;value&quot;:&quot;测试1,测试2&quot;,</span><br><span class="line">                        &quot;sort&quot;:3</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;title&quot;:&quot;测试字段3&quot;,</span><br><span class="line">                        &quot;type&quot;:&quot;text&quot;,</span><br><span class="line">                        &quot;isRequired&quot;:1,</span><br><span class="line">                        &quot;visible&quot;:1,</span><br><span class="line">                        &quot;value&quot;:&quot;test&quot;,</span><br><span class="line">                        &quot;sort&quot;:4</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                &quot;editable&quot;:1,</span><br><span class="line">                &quot;status&quot;:0,</span><br><span class="line">                &quot;url&quot;:&quot;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;pageNo&quot;:1,</span><br><span class="line">                &quot;pageSize&quot;:10,</span><br><span class="line">                &quot;start&quot;:null,</span><br><span class="line">                &quot;offset&quot;:null,</span><br><span class="line">                &quot;id&quot;:&quot;5a0bb3e0e9d75832105bb9fb&quot;,</span><br><span class="line">                &quot;workOrderName&quot;:null,</span><br><span class="line">                &quot;dictionary&quot;:[</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;title&quot;:&quot;测试字段0&quot;,</span><br><span class="line">                        &quot;type&quot;:&quot;text&quot;,</span><br><span class="line">                        &quot;isRequired&quot;:1,</span><br><span class="line">                        &quot;visible&quot;:1,</span><br><span class="line">                        &quot;value&quot;:&quot;test&quot;,</span><br><span class="line">                        &quot;sort&quot;:1</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;title&quot;:&quot;测试字段1&quot;,</span><br><span class="line">                        &quot;type&quot;:&quot;text&quot;,</span><br><span class="line">                        &quot;isRequired&quot;:1,</span><br><span class="line">                        &quot;visible&quot;:1,</span><br><span class="line">                        &quot;value&quot;:&quot;test&quot;,</span><br><span class="line">                        &quot;sort&quot;:2</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;title&quot;:&quot;测试字段2&quot;,</span><br><span class="line">                        &quot;type&quot;:&quot;select&quot;,</span><br><span class="line">                        &quot;isRequired&quot;:1,</span><br><span class="line">                        &quot;visible&quot;:1,</span><br><span class="line">                        &quot;value&quot;:&quot;测试1,测试2&quot;,</span><br><span class="line">                        &quot;sort&quot;:3</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;title&quot;:&quot;测试字段3&quot;,</span><br><span class="line">                        &quot;type&quot;:&quot;text&quot;,</span><br><span class="line">                        &quot;isRequired&quot;:1,</span><br><span class="line">                        &quot;visible&quot;:1,</span><br><span class="line">                        &quot;value&quot;:&quot;test&quot;,</span><br><span class="line">                        &quot;sort&quot;:4</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                &quot;editable&quot;:1,</span><br><span class="line">                &quot;status&quot;:0,</span><br><span class="line">                &quot;url&quot;:&quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;prePage&quot;:0,</span><br><span class="line">        &quot;nextPage&quot;:2,</span><br><span class="line">        &quot;isFirstPage&quot;:true,</span><br><span class="line">        &quot;isLastPage&quot;:false,</span><br><span class="line">        &quot;hasPreviousPage&quot;:false,</span><br><span class="line">        &quot;hasNextPage&quot;:true,</span><br><span class="line">        &quot;navigatePages&quot;:5,</span><br><span class="line">        &quot;navigatepageNums&quot;:Array[2],</span><br><span class="line">        &quot;navigateFirstPage&quot;:1,</span><br><span class="line">        &quot;navigateLastPage&quot;:2,</span><br><span class="line">        &quot;firstPage&quot;:1,</span><br><span class="line">        &quot;lastPage&quot;:2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Spring Boot对各种流行的数据源都进行了封装，当然也包括了mongodb,下面介绍如何在spring boot中使用mongodb：&lt;/p&gt;
&lt;h1 id=&quot;pom包配置&quot;&gt;&lt;a href=&quot;#pom包配置&quot; class=&quot;headerlink&quot; title=&quot;po
      
    
    </summary>
    
      <category term="excel" scheme="https://sunshinehub.github.io/categories/excel/"/>
    
    
      <category term="java" scheme="https://sunshinehub.github.io/tags/java/"/>
    
      <category term="excel" scheme="https://sunshinehub.github.io/tags/excel/"/>
    
  </entry>
  
  <entry>
    <title>git入门</title>
    <link href="https://sunshinehub.github.io/2018/08/28/git%E5%85%A5%E9%97%A8/"/>
    <id>https://sunshinehub.github.io/2018/08/28/git入门/</id>
    <published>2018-08-28T10:36:53.000Z</published>
    <updated>2018-10-25T06:31:14.402Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.</p><p>Git 是一个开源免费的分布式版本控制系统，旨在提高大小项目的速度和效率。</p><h2 id="2-与SVN的区别"><a href="#2-与SVN的区别" class="headerlink" title="2. 与SVN的区别"></a>2. 与SVN的区别</h2><ol><li>本地版本控制系统:(解决个人的版本管理)</li><li>分布式版本控制 与 集中式版本控制</li><li>git 版本存储的是快照,svn 是差异文件</li><li>git 速度更快,效率更高</li><li>git 切换分支（只是切换指针）</li></ol><h2 id="3-安装-Windows版-Git-msysgit"><a href="#3-安装-Windows版-Git-msysgit" class="headerlink" title="3. 安装 Windows版 Git - msysgit"></a>3. 安装 Windows版 Git - msysgit</h2><p><a href="https://gitforwindows.org/" target="_blank" rel="noopener">https://gitforwindows.org/</a></p><h2 id="4-GIT-常规操作流程"><a href="#4-GIT-常规操作流程" class="headerlink" title="4. GIT 常规操作流程"></a>4. GIT 常规操作流程</h2><p>克隆项目 -&gt; 修改文件 -&gt; 提交修改到暂存区 -&gt; 提交修改到本地仓库 -&gt; 提交到远程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> http://192.168.4.254/xx   <span class="comment">#克隆</span></span><br><span class="line">修改文件</span><br><span class="line">git add .  <span class="comment">#添加到暂存区</span></span><br><span class="line">git commit -m <span class="string">"这是第一次提交"</span> <span class="comment">#提交本地</span></span><br><span class="line">git push -u origin master  <span class="comment">#提交远程</span></span><br></pre></td></tr></table></figure><ul><li>git status 查看即时状态</li><li>git log 查看日志</li></ul><p>温馨提示：</p><blockquote><p>Git在执行提交的时候，不是直接将工作树的状态保存到数据库，而是将设置在中间索引区域的状态保存到数据库。因此，要提交文件，首先需要把文件加入到索引区域中</p></blockquote><blockquote><p>所以，凭借中间的索引，可以避免工作树中不必要的文件提交，还可以将文件修改内容的一部分加入索引区域并提交。</p></blockquote><h2 id="5-Git-更新代码"><a href="#5-Git-更新代码" class="headerlink" title="5. Git 更新代码"></a>5. Git 更新代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><h2 id="6-Git-合并修改记录"><a href="#6-Git-合并修改记录" class="headerlink" title="6. Git 合并修改记录"></a>6. Git 合并修改记录</h2><h4 id="Fast-forward-方式"><a href="#Fast-forward-方式" class="headerlink" title="Fast-forward 方式"></a>Fast-forward 方式</h4><p><img src="https://backlog.com/git-tutorial/cn/img/post/intro/capture_intro5_1_1.png" alt="https://backlog.com/git-tutorial/cn/img/post/intro/capture_intro5_1_1.png"></p><p>在执行pull之后，进行下一次push之前，如果其他人进行了推送内容到远程数据库的话，那么你的push将被拒绝。</p><p><img src="https://backlog.com/git-tutorial/cn/img/post/intro/capture_intro5_1_2.png" alt="https://backlog.com/git-tutorial/cn/img/post/intro/capture_intro5_1_2.png"></p><p>这种情况下，在读取别人push的变更并进行合并操作之前，你的push都将被拒绝。这是因为，如果不进行合并就试图覆盖已有的变更记录的话，其他人push的变更（图中的提交C）就会丢失。</p><h4 id="Confict-冲突"><a href="#Confict-冲突" class="headerlink" title="Confict (冲突)"></a>Confict (冲突)</h4><p>在上一个页面我们提及到，执行合并即可自动合并Git修改的部分。但是，也存在无法自动合并的情况。</p><p>如果远程数据库和本地数据库的同一个地方都发生了修改的情况下，因为无法自动判断要选用哪一个修改，所以就会发生冲突。</p><p>Git会在发生冲突的地方修改文件的内容，如下图。所以我们需要手动修正冲突。</p><p><img src="https://backlog.com/git-tutorial/cn/img/post/intro/capture_intro5_1_3.png" alt="https://backlog.com/git-tutorial/cn/img/post/intro/capture_intro5_1_3.png"></p><p>如下图所示，修正所有冲突的地方之后，执行提交。</p><p><img src="https://backlog.com/git-tutorial/cn/img/post/intro/capture_intro5_1_4.png" alt="https://backlog.com/git-tutorial/cn/img/post/intro/capture_intro5_1_4.png"></p><p>冲突解决办法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git pull //更新代码</span><br><span class="line">解决冲突</span><br><span class="line">git add . </span><br><span class="line">git commit -m <span class="string">"解决了冲突"</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p><h2 id="7-分支"><a href="#7-分支" class="headerlink" title="7. 分支"></a>7. 分支</h2><p>分支是为了将修改记录的整体流程分叉保存。分叉后的分支不受其他分支的影响，所以在同一个数据库里可以同时进行多个修改。</p><p><img src="https://backlog.com/git-tutorial/cn/img/post/stepup/capture_stepup1_1_1.png" alt="https://backlog.com/git-tutorial/cn/img/post/stepup/capture_stepup1_1_1.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hotfix316 //从当前分支签出分支(创建分支)</span><br><span class="line">git branch //查看分支</span><br><span class="line">修改hotfix316的分支</span><br><span class="line">开始准备合并到master分支</span><br><span class="line">git checkout master //切换分支</span><br><span class="line">git merge hotfix316//合并hotfix316分支到master分支</span><br><span class="line">git commit -am <span class="string">"提交代码"</span> //这里的a参数相当于add</span><br><span class="line">git push origin master //提交到远程</span><br></pre></td></tr></table></figure><h2 id="8-回滚文件"><a href="#8-回滚文件" class="headerlink" title="8. 回滚文件"></a>8. 回滚文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD</span><br><span class="line">git reset --mixed HEAD</span><br><span class="line">git reset --soft HEAD</span><br><span class="line">git rm --cached</span><br><span class="line">git checkout -- . <span class="comment">#丢失还未提交的数据</span></span><br></pre></td></tr></table></figure><h2 id="9-标签"><a href="#9-标签" class="headerlink" title="9. 标签"></a>9. 标签</h2><p>（用于发版打标签）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git tag v1.0.0 <span class="comment">#创建一个轻标签</span></span><br><span class="line">git tag -am <span class="string">"新版本注释"</span> v1.0.1 <span class="comment">#创建一个注解标签</span></span><br><span class="line">git tag -d v1.0.0 删除一个标签</span><br></pre></td></tr></table></figure><h2 id="10-忽略文件-gitignore"><a href="#10-忽略文件-gitignore" class="headerlink" title="10. 忽略文件 - .gitignore"></a>10. 忽略文件 - .gitignore</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*.a</span><br><span class="line">!lib.a</span><br><span class="line">/TODO</span><br><span class="line">build/</span><br><span class="line">doc/*.txt</span><br></pre></td></tr></table></figure><h2 id="11-暂存机制-stash"><a href="#11-暂存机制-stash" class="headerlink" title="11. 暂存机制 - stash"></a>11. 暂存机制 - stash</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git stash list</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><h2 id="12-差异比较"><a href="#12-差异比较" class="headerlink" title="12. 差异比较"></a>12. 差异比较</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD^ HEAD</span><br></pre></td></tr></table></figure><h2 id="13-杂项命令"><a href="#13-杂项命令" class="headerlink" title="13. 杂项命令"></a>13. 杂项命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --<span class="built_in">stat</span> <span class="comment">#宏观差异日志</span></span><br><span class="line">git <span class="built_in">log</span> -p <span class="comment">#详细差异日志</span></span><br><span class="line">git commit --amend <span class="comment">#修改提交</span></span><br><span class="line">git rm &lt;filename&gt;</span><br><span class="line">git rm --cached <span class="comment">#删除暂存区</span></span><br><span class="line">git config --global auto.crlf <span class="literal">false</span> <span class="comment">#设置windows不替换\n为\r\n</span></span><br><span class="line">gitk --all <span class="comment">#GUI工具</span></span><br></pre></td></tr></table></figure><h2 id="14-GitLab地址"><a href="#14-GitLab地址" class="headerlink" title="14. GitLab地址"></a>14. GitLab地址</h2><ul><li><a href="http://192.168.4.254/" target="_blank" rel="noopener">http://192.168.4.254/</a></li></ul><h4 id="参考注"><a href="#参考注" class="headerlink" title="参考注:"></a>参考注:</h4><p> <a href="https://backlog.com/git-tutorial/cn/" target="_blank" rel="noopener">猴子都能懂的GIT入门</a><br> <a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener">gitbook</a><br> <a href="http://www.bootcss.com/p/git-guide/" target="_blank" rel="noopener">bootcss git 指南</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-介绍&quot;&gt;&lt;a href=&quot;#1-介绍&quot; class=&quot;headerlink&quot; title=&quot;1. 介绍&quot;&gt;&lt;/a&gt;1. 介绍&lt;/h2&gt;&lt;p&gt;Git is a free and open source distributed version control sy
      
    
    </summary>
    
      <category term="git" scheme="https://sunshinehub.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://sunshinehub.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>poi大批量导入excel数据</title>
    <link href="https://sunshinehub.github.io/2018/07/28/poi%E5%A4%A7%E6%89%B9%E9%87%8F%E5%AF%BC%E5%85%A5excel%E6%95%B0%E6%8D%AE/"/>
    <id>https://sunshinehub.github.io/2018/07/28/poi大批量导入excel数据/</id>
    <published>2018-07-28T10:30:00.000Z</published>
    <updated>2018-10-25T06:31:14.402Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-2003-Reader"><a href="#1-2003-Reader" class="headerlink" title="1.2003 Reader"></a>1.2003 Reader</h1><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br></pre></td><td class="code"><pre><span class="line">package com.tj.tjk.util.myExcel;  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import org.apache.poi.hssf.eventusermodel.EventWorkbookBuilder.SheetRecordCollectingListener;</span><br><span class="line">import org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener;</span><br><span class="line">import org.apache.poi.hssf.eventusermodel.HSSFEventFactory;</span><br><span class="line">import org.apache.poi.hssf.eventusermodel.HSSFListener;</span><br><span class="line">import org.apache.poi.hssf.eventusermodel.HSSFRequest;</span><br><span class="line">import org.apache.poi.hssf.eventusermodel.MissingRecordAwareHSSFListener;</span><br><span class="line">import org.apache.poi.hssf.eventusermodel.dummyrecord.LastCellOfRowDummyRecord;</span><br><span class="line">import org.apache.poi.hssf.eventusermodel.dummyrecord.MissingCellDummyRecord;</span><br><span class="line">import org.apache.poi.hssf.model.HSSFFormulaParser;</span><br><span class="line">import org.apache.poi.hssf.record.BOFRecord;</span><br><span class="line">import org.apache.poi.hssf.record.BlankRecord;</span><br><span class="line">import org.apache.poi.hssf.record.BoolErrRecord;</span><br><span class="line">import org.apache.poi.hssf.record.BoundSheetRecord;</span><br><span class="line">import org.apache.poi.hssf.record.FormulaRecord;</span><br><span class="line">import org.apache.poi.hssf.record.LabelRecord;</span><br><span class="line">import org.apache.poi.hssf.record.LabelSSTRecord;</span><br><span class="line">import org.apache.poi.hssf.record.NumberRecord;</span><br><span class="line">import org.apache.poi.hssf.record.Record;</span><br><span class="line">import org.apache.poi.hssf.record.SSTRecord;</span><br><span class="line">import org.apache.poi.hssf.record.StringRecord;</span><br><span class="line">import org.apache.poi.hssf.usermodel.HSSFWorkbook;</span><br><span class="line">import org.apache.poi.poifs.filesystem.POIFSFileSystem;</span><br><span class="line">import org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 名称: ExcelXlsReader.java&lt;br&gt;</span><br><span class="line"> * 描述: &lt;br&gt;</span><br><span class="line"> * 类型: JAVA&lt;br&gt;</span><br><span class="line"> * 最近修改时间:2016年7月5日 上午10:00:32&lt;br&gt;</span><br><span class="line"> * </span><br><span class="line"> * @since 2016年7月5日</span><br><span class="line"> * @author “”</span><br><span class="line"> */</span><br><span class="line">public abstract class MyExcel2003Reader&lt;T&gt; implements HSSFListener &#123;</span><br><span class="line"></span><br><span class="line">    private int minColumns = -1;</span><br><span class="line"></span><br><span class="line">    private POIFSFileSystem fs;</span><br><span class="line"></span><br><span class="line">    private int lastRowNumber;</span><br><span class="line"></span><br><span class="line">    private int lastColumnNumber;</span><br><span class="line"></span><br><span class="line">    /** Should we output the formula, or the value it has? */</span><br><span class="line">    private boolean outputFormulaValues = true;</span><br><span class="line"></span><br><span class="line">    /** For parsing Formulas */</span><br><span class="line">    private SheetRecordCollectingListener workbookBuildingListener;</span><br><span class="line"></span><br><span class="line">    // excel2003工作薄</span><br><span class="line">    private HSSFWorkbook stubWorkbook;</span><br><span class="line"></span><br><span class="line">    // Records we pick up as we process</span><br><span class="line">    private SSTRecord sstRecord;</span><br><span class="line"></span><br><span class="line">    private FormatTrackingHSSFListener formatListener;</span><br><span class="line"></span><br><span class="line">    // 表索引</span><br><span class="line">    private int sheetIndex = -1;</span><br><span class="line"></span><br><span class="line">    private BoundSheetRecord[] orderedBSRs;</span><br><span class="line"></span><br><span class="line">    @SuppressWarnings(&quot;unchecked&quot;)</span><br><span class="line">    private ArrayList boundSheetRecords = new ArrayList();</span><br><span class="line"></span><br><span class="line">    // For handling formulas with string results</span><br><span class="line">    private int nextRow;</span><br><span class="line"></span><br><span class="line">    private int nextColumn;</span><br><span class="line"></span><br><span class="line">    private boolean outputNextStringRecord;</span><br><span class="line"></span><br><span class="line">    // 当前行</span><br><span class="line">    private int curRow = 0;</span><br><span class="line"></span><br><span class="line">    // 存储行记录的容器</span><br><span class="line">    private List&lt;String&gt; rowlist = new ArrayList&lt;String&gt;();;</span><br><span class="line"></span><br><span class="line">    @SuppressWarnings(&quot;unused&quot;)</span><br><span class="line">    private String sheetName;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 遍历excel下所有的sheet</span><br><span class="line">     * </span><br><span class="line">     * @throws IOException</span><br><span class="line">     */</span><br><span class="line">    public void process(String file) throws IOException &#123;</span><br><span class="line">        this.fs = new POIFSFileSystem(new FileInputStream(file));</span><br><span class="line">        MissingRecordAwareHSSFListener listener = new MissingRecordAwareHSSFListener(this);</span><br><span class="line">        formatListener = new FormatTrackingHSSFListener(listener);</span><br><span class="line">        HSSFEventFactory factory = new HSSFEventFactory();</span><br><span class="line">        HSSFRequest request = new HSSFRequest();</span><br><span class="line">        if (outputFormulaValues) &#123;</span><br><span class="line">            request.addListenerForAllRecords(formatListener);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            workbookBuildingListener = new SheetRecordCollectingListener(formatListener);</span><br><span class="line">            request.addListenerForAllRecords(workbookBuildingListener);</span><br><span class="line">        &#125;</span><br><span class="line">        factory.processWorkbookEvents(request, fs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * HSSFListener 监听方法，处理 Record</span><br><span class="line">     */</span><br><span class="line">    @SuppressWarnings(&quot;unchecked&quot;)</span><br><span class="line">    public void processRecord(Record record) &#123;</span><br><span class="line">        int thisRow = -1;</span><br><span class="line">        int thisColumn = -1;</span><br><span class="line">        String thisStr = null;</span><br><span class="line">        String value = null;</span><br><span class="line">        switch (record.getSid()) &#123;</span><br><span class="line">        case BoundSheetRecord.sid:</span><br><span class="line">            boundSheetRecords.add(record);</span><br><span class="line">            break;</span><br><span class="line">        case BOFRecord.sid:</span><br><span class="line">            BOFRecord br = (BOFRecord) record;</span><br><span class="line">            if (br.getType() == BOFRecord.TYPE_WORKSHEET) &#123;</span><br><span class="line">                // 如果有需要，则建立子工作薄</span><br><span class="line">                if (workbookBuildingListener != null &amp;&amp; stubWorkbook == null) &#123;</span><br><span class="line">                    stubWorkbook = workbookBuildingListener.getStubHSSFWorkbook();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                sheetIndex++;</span><br><span class="line">                if (orderedBSRs == null) &#123;</span><br><span class="line">                    orderedBSRs = BoundSheetRecord.orderByBofPosition(boundSheetRecords);</span><br><span class="line">                &#125;</span><br><span class="line">                sheetName = orderedBSRs[sheetIndex].getSheetname();</span><br><span class="line">            &#125;</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        case SSTRecord.sid:</span><br><span class="line">            sstRecord = (SSTRecord) record;</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        case BlankRecord.sid:</span><br><span class="line">            BlankRecord brec = (BlankRecord) record;</span><br><span class="line">            thisRow = brec.getRow();</span><br><span class="line">            thisColumn = brec.getColumn();</span><br><span class="line">            thisStr = &quot;&quot;;</span><br><span class="line">            rowlist.add(thisColumn, thisStr);</span><br><span class="line">            break;</span><br><span class="line">        case BoolErrRecord.sid: // 单元格为布尔类型</span><br><span class="line">            BoolErrRecord berec = (BoolErrRecord) record;</span><br><span class="line">            thisRow = berec.getRow();</span><br><span class="line">            thisColumn = berec.getColumn();</span><br><span class="line">            thisStr = berec.getBooleanValue() + &quot;&quot;;</span><br><span class="line">            rowlist.add(thisColumn, thisStr);</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        case FormulaRecord.sid: // 单元格为公式类型</span><br><span class="line">            FormulaRecord frec = (FormulaRecord) record;</span><br><span class="line">            thisRow = frec.getRow();</span><br><span class="line">            thisColumn = frec.getColumn();</span><br><span class="line">            if (outputFormulaValues) &#123;</span><br><span class="line">                if (Double.isNaN(frec.getValue())) &#123;</span><br><span class="line">                    // Formula result is a string</span><br><span class="line">                    // This is stored in the next record</span><br><span class="line">                    outputNextStringRecord = true;</span><br><span class="line">                    nextRow = frec.getRow();</span><br><span class="line">                    nextColumn = frec.getColumn();</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    thisStr = formatListener.formatNumberDateCell(frec);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                thisStr = &apos;&quot;&apos; + HSSFFormulaParser.toFormulaString(stubWorkbook, frec.getParsedExpression()) + &apos;&quot;&apos;;</span><br><span class="line">            &#125;</span><br><span class="line">            rowlist.add(thisColumn, thisStr);</span><br><span class="line">            break;</span><br><span class="line">        case StringRecord.sid:// 单元格中公式的字符串</span><br><span class="line">            if (outputNextStringRecord) &#123;</span><br><span class="line">                // String for formula</span><br><span class="line">                StringRecord srec = (StringRecord) record;</span><br><span class="line">                thisStr = srec.getString();</span><br><span class="line">                thisRow = nextRow;</span><br><span class="line">                thisColumn = nextColumn;</span><br><span class="line">                outputNextStringRecord = false;</span><br><span class="line">            &#125;</span><br><span class="line">            break;</span><br><span class="line">        case LabelRecord.sid:</span><br><span class="line">            LabelRecord lrec = (LabelRecord) record;</span><br><span class="line">            curRow = thisRow = lrec.getRow();</span><br><span class="line">            thisColumn = lrec.getColumn();</span><br><span class="line">            value = lrec.getValue().trim();</span><br><span class="line">            value = value.equals(&quot;&quot;) ? &quot; &quot; : value;</span><br><span class="line">            this.rowlist.add(thisColumn, value);</span><br><span class="line">            break;</span><br><span class="line">        case LabelSSTRecord.sid: // 单元格为字符串类型</span><br><span class="line">            LabelSSTRecord lsrec = (LabelSSTRecord) record;</span><br><span class="line">            curRow = thisRow = lsrec.getRow();</span><br><span class="line">            thisColumn = lsrec.getColumn();</span><br><span class="line">            if (sstRecord == null) &#123;</span><br><span class="line">                rowlist.add(thisColumn, &quot; &quot;);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                value = sstRecord.getString(lsrec.getSSTIndex()).toString().trim();</span><br><span class="line">                value = value.equals(&quot;&quot;) ? &quot; &quot; : value;</span><br><span class="line">                rowlist.add(thisColumn, value);</span><br><span class="line">            &#125;</span><br><span class="line">            break;</span><br><span class="line">        case NumberRecord.sid: // 单元格为数字类型</span><br><span class="line">            NumberRecord numrec = (NumberRecord) record;</span><br><span class="line">            curRow = thisRow = numrec.getRow();</span><br><span class="line">            thisColumn = numrec.getColumn();</span><br><span class="line">            value = formatListener.formatNumberDateCell(numrec).trim();</span><br><span class="line">            value = value.equals(&quot;&quot;) ? &quot; &quot; : value;</span><br><span class="line">            // 向容器加入列值</span><br><span class="line">            rowlist.add(thisColumn, value);</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 遇到新行的操作</span><br><span class="line">        if (thisRow != -1 &amp;&amp; thisRow != lastRowNumber) &#123;</span><br><span class="line">            lastColumnNumber = -1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 空值的操作</span><br><span class="line">        if (record instanceof MissingCellDummyRecord) &#123;</span><br><span class="line">            MissingCellDummyRecord mc = (MissingCellDummyRecord) record;</span><br><span class="line">            curRow = thisRow = mc.getRow();</span><br><span class="line">            thisColumn = mc.getColumn();</span><br><span class="line">            rowlist.add(thisColumn, &quot; &quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 更新行和列的值</span><br><span class="line">        if (thisRow &gt; -1)</span><br><span class="line">            lastRowNumber = thisRow;</span><br><span class="line">        if (thisColumn &gt; -1)</span><br><span class="line">            lastColumnNumber = thisColumn;</span><br><span class="line"></span><br><span class="line">        // 行结束时的操作</span><br><span class="line">        if (record instanceof LastCellOfRowDummyRecord) &#123;</span><br><span class="line">         if (curRow == 0) &#123;</span><br><span class="line">         minColumns = lastColumnNumber;</span><br><span class="line">             &#125;</span><br><span class="line">            if (minColumns &gt; 0) &#123;</span><br><span class="line">                // 列值重新置空</span><br><span class="line">                if (lastColumnNumber == -1) &#123;</span><br><span class="line">                    lastColumnNumber = 0;</span><br><span class="line">                &#125;</span><br><span class="line">                for (int i = lastColumnNumber; i &lt; minColumns; i++) &#123;</span><br><span class="line">            rowlist.add(&quot;&quot;);</span><br><span class="line">            lastColumnNumber++;</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            lastColumnNumber = -1;</span><br><span class="line"></span><br><span class="line">            // 每行结束时， 调用getRows() 方法</span><br><span class="line">            getRows(sheetIndex, curRow, rowlist);</span><br><span class="line">            // 清空容器</span><br><span class="line">            rowlist.clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /** </span><br><span class="line">     * 获取行数据回调 </span><br><span class="line">     * @param sheetIndex </span><br><span class="line">     * @param curRow </span><br><span class="line">     * @param rowList </span><br><span class="line">     * @return </span><br><span class="line">     */ </span><br><span class="line">    public abstract void getRows(int sheetIndex, int curRow, List&lt;String&gt; rowList); </span><br><span class="line">    </span><br><span class="line">      /*public static void main(String[] args) &#123;</span><br><span class="line">       IExcelRowReader rowReader = new ExcelRowReader();</span><br><span class="line">      try &#123;</span><br><span class="line">          // ExcelReaderUtil.readExcel(rowReader,</span><br><span class="line">          // &quot;E://2016-07-04-011940a.xls&quot;);</span><br><span class="line">            System.out.println(&quot;**********************************************&quot;);</span><br><span class="line">            ExcelReaderUtil.readExcel(rowReader, &quot;E://test.xlsx&quot;);</span><br><span class="line">            &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-2007-Reader"><a href="#2-2007-Reader" class="headerlink" title="2. 2007 Reader"></a>2. 2007 Reader</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br></pre></td><td class="code"><pre><span class="line">package com.tj.tjk.util.myExcel;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.Iterator;</span><br><span class="line">import java.util.List;</span><br><span class="line">import org.apache.commons.lang.StringUtils;</span><br><span class="line">import org.apache.poi.openxml4j.exceptions.OpenXML4JException;</span><br><span class="line">import org.apache.poi.openxml4j.opc.OPCPackage;</span><br><span class="line">import org.apache.poi.ss.usermodel.BuiltinFormats;</span><br><span class="line">import org.apache.poi.ss.usermodel.DataFormatter;</span><br><span class="line">import org.apache.poi.xssf.eventusermodel.XSSFReader;</span><br><span class="line">import org.apache.poi.xssf.model.SharedStringsTable;</span><br><span class="line">import org.apache.poi.xssf.model.StylesTable;</span><br><span class="line">import org.apache.poi.xssf.usermodel.XSSFCellStyle;</span><br><span class="line">import org.apache.poi.xssf.usermodel.XSSFRichTextString;</span><br><span class="line">import org.xml.sax.Attributes;</span><br><span class="line">import org.xml.sax.InputSource;</span><br><span class="line">import org.xml.sax.SAXException;</span><br><span class="line">import org.xml.sax.XMLReader;</span><br><span class="line">import org.xml.sax.helpers.DefaultHandler;</span><br><span class="line">import org.xml.sax.helpers.XMLReaderFactory;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 名称: ExcelXlsxReader.java&lt;br&gt;</span><br><span class="line"> * 描述: &lt;br&gt;</span><br><span class="line"> * 类型: JAVA&lt;br&gt;</span><br><span class="line"> * 最近修改时间:2016年7月5日 上午10:00:52&lt;br&gt;</span><br><span class="line"> * </span><br><span class="line"> * @since 2016年7月5日</span><br><span class="line"> * @author “”</span><br><span class="line"> */</span><br><span class="line">public abstract class MyExcel2007Reader&lt;T&gt; extends DefaultHandler &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 共享字符串表</span><br><span class="line">     */</span><br><span class="line">    private SharedStringsTable sst;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 上一次的内容</span><br><span class="line">     */</span><br><span class="line">    private String lastContents;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 字符串标识</span><br><span class="line">     */</span><br><span class="line">    private boolean nextIsString;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 工作表索引</span><br><span class="line">     */</span><br><span class="line">    private int sheetIndex = -1;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 行集合</span><br><span class="line">     */</span><br><span class="line">    private List&lt;String&gt; rowlist = new ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 当前行</span><br><span class="line">     */</span><br><span class="line">    private int curRow = 0;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 当前列</span><br><span class="line">     */</span><br><span class="line">    private int curCol = 0;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * T元素标识</span><br><span class="line">     */</span><br><span class="line">    private boolean isTElement;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 单元格数据类型，默认为字符串类型</span><br><span class="line">     */</span><br><span class="line">    private CellDataType nextDataType = CellDataType.SSTINDEX;</span><br><span class="line"></span><br><span class="line">    private final DataFormatter formatter = new DataFormatter();</span><br><span class="line"></span><br><span class="line">    private short formatIndex;</span><br><span class="line"></span><br><span class="line">    private String formatString;</span><br><span class="line"></span><br><span class="line">    // 定义前一个元素和当前元素的位置，用来计算其中空的单元格数量，如A6和A8等</span><br><span class="line">    private String ref = null;</span><br><span class="line"></span><br><span class="line">    // 定义该文档一行最大的单元格数，用来补全一行最后可能缺失的单元格</span><br><span class="line">    private String maxRef = null;</span><br><span class="line">    </span><br><span class="line"> // 定义当前读到的列数，实际读取时会按照从0开始...</span><br><span class="line">    private int thisColumn = -1;</span><br><span class="line">    //一行最大列数</span><br><span class="line">    private int maxClumn;</span><br><span class="line">    // 定义上一次读到的列序号</span><br><span class="line">    private int lastColumnNumber = -1;</span><br><span class="line"> // 定义当前读到的列与上一次读到的列中是否有空值（即该单元格什么也没有输入，连空格都不存在）默认为false</span><br><span class="line">    private boolean flag = false ;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 单元格</span><br><span class="line">     */</span><br><span class="line">    private StylesTable stylesTable;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 遍历工作簿中所有的电子表格</span><br><span class="line">     * </span><br><span class="line">     * @param filename</span><br><span class="line">     * @throws IOException</span><br><span class="line">     * @throws OpenXML4JException</span><br><span class="line">     * @throws SAXException</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    public void process(String name) throws IOException, OpenXML4JException, SAXException &#123;</span><br><span class="line">        OPCPackage pkg = OPCPackage.open(name);</span><br><span class="line">        XSSFReader xssfReader = new XSSFReader(pkg);</span><br><span class="line">        stylesTable = xssfReader.getStylesTable();</span><br><span class="line">        SharedStringsTable sst = xssfReader.getSharedStringsTable();</span><br><span class="line">        XMLReader parser = this.fetchSheetParser(sst);</span><br><span class="line">        Iterator&lt;InputStream&gt; sheets = xssfReader.getSheetsData();</span><br><span class="line">        while (sheets.hasNext()) &#123;</span><br><span class="line">            curRow = 0;</span><br><span class="line">            sheetIndex++;</span><br><span class="line">            InputStream sheet = sheets.next();</span><br><span class="line">            InputSource sheetSource = new InputSource(sheet);</span><br><span class="line">            parser.parse(sheetSource);</span><br><span class="line">            sheet.close();</span><br><span class="line">        &#125;</span><br><span class="line">        pkg.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public XMLReader fetchSheetParser(SharedStringsTable sst) throws SAXException &#123;</span><br><span class="line">        XMLReader parser = XMLReaderFactory.createXMLReader(&quot;org.apache.xerces.parsers.SAXParser&quot;);</span><br><span class="line">        this.sst = sst;</span><br><span class="line">        parser.setContentHandler(this);</span><br><span class="line">        return parser;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Converts an Excel column name like &quot;C&quot; to a zero-based index.</span><br><span class="line">     *</span><br><span class="line">     * @param name</span><br><span class="line">     * @return Index corresponding to the specified name</span><br><span class="line">     */</span><br><span class="line">    private int nameToColumn(String name) &#123;</span><br><span class="line">        int column = -1;</span><br><span class="line">        for (int i = 0; i &lt; name.length(); ++i) &#123;</span><br><span class="line">            int c = name.charAt(i);</span><br><span class="line">            column = (column + 1) * 26 + c - &apos;A&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">        return column;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void startElement(String uri, String localName, String name, Attributes attributes) throws SAXException &#123;</span><br><span class="line">//    if (&quot;inlineStr&quot;.equals(name) || &quot;v&quot;.equals(name)) &#123;</span><br><span class="line">//            vIsOpen = true;</span><br><span class="line">//            // Clear contents cache</span><br><span class="line">//            value.setLength(0);</span><br><span class="line">//        &#125;</span><br><span class="line">        // c =&gt; cell</span><br><span class="line">    if (&quot;c&quot;.equals(name)) &#123;</span><br><span class="line">            // Get the cell reference</span><br><span class="line">            String r = attributes.getValue(&quot;r&quot;);</span><br><span class="line">            int firstDigit = -1;</span><br><span class="line">            for (int c = 0; c &lt; r.length(); ++c) &#123;</span><br><span class="line">                if (Character.isDigit(r.charAt(c))) &#123;</span><br><span class="line">                    firstDigit = c;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            thisColumn = nameToColumn(r.substring(0, firstDigit));//获取当前读取的列数</span><br><span class="line">//        // c =&gt; 单元格</span><br><span class="line">//        if (&quot;c&quot;.equals(name)) &#123;</span><br><span class="line">//            // 前一个单元格的位置</span><br><span class="line">//            if (preRef == null) &#123;</span><br><span class="line">//                preRef = attributes.getValue(&quot;r&quot;);</span><br><span class="line">//            &#125; else &#123;</span><br><span class="line">//                preRef = ref;</span><br><span class="line">//            &#125;</span><br><span class="line">            // 当前单元格的位置</span><br><span class="line">            ref = attributes.getValue(&quot;r&quot;);</span><br><span class="line">            // 设定单元格类型</span><br><span class="line">            this.setNextDataType(attributes);</span><br><span class="line">            // Figure out if the value is an index in the SST</span><br><span class="line">            String cellType = attributes.getValue(&quot;t&quot;);</span><br><span class="line">            if (cellType != null &amp;&amp; cellType.equals(&quot;s&quot;)) &#123;</span><br><span class="line">                nextIsString = true;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                nextIsString = false;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 当元素为t时</span><br><span class="line">        if (&quot;t&quot;.equals(name)) &#123;</span><br><span class="line">            isTElement = true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            isTElement = false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 置空</span><br><span class="line">        lastContents = &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 单元格中的数据可能的数据类型</span><br><span class="line">     */</span><br><span class="line">    enum CellDataType &#123;</span><br><span class="line">        BOOL, ERROR, FORMULA, INLINESTR, SSTINDEX, NUMBER, DATE, NULL</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 处理数据类型</span><br><span class="line">     * </span><br><span class="line">     * @param attributes</span><br><span class="line">     */</span><br><span class="line">    public void setNextDataType(Attributes attributes) &#123;</span><br><span class="line">        nextDataType = CellDataType.NUMBER;</span><br><span class="line">        formatIndex = -1;</span><br><span class="line">        formatString = null;</span><br><span class="line">        String cellType = attributes.getValue(&quot;t&quot;);</span><br><span class="line">        String cellStyleStr = attributes.getValue(&quot;s&quot;);</span><br><span class="line"></span><br><span class="line">        if (&quot;b&quot;.equals(cellType)) &#123;</span><br><span class="line">            nextDataType = CellDataType.BOOL;</span><br><span class="line">        &#125; else if (&quot;e&quot;.equals(cellType)) &#123;</span><br><span class="line">            nextDataType = CellDataType.ERROR;</span><br><span class="line">        &#125; else if (&quot;inlineStr&quot;.equals(cellType)) &#123;</span><br><span class="line">            nextDataType = CellDataType.INLINESTR;</span><br><span class="line">        &#125; else if (&quot;s&quot;.equals(cellType)) &#123;</span><br><span class="line">            nextDataType = CellDataType.SSTINDEX;</span><br><span class="line">        &#125; else if (&quot;str&quot;.equals(cellType)) &#123;</span><br><span class="line">            nextDataType = CellDataType.FORMULA;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (cellStyleStr != null) &#123;</span><br><span class="line">            int styleIndex = Integer.parseInt(cellStyleStr);</span><br><span class="line">            XSSFCellStyle style = stylesTable.getStyleAt(styleIndex);</span><br><span class="line">            formatIndex = style.getDataFormat();</span><br><span class="line">            formatString = style.getDataFormatString();</span><br><span class="line"></span><br><span class="line">            if (&quot;m/d/yy&quot; == formatString) &#123;</span><br><span class="line">                nextDataType = CellDataType.DATE;</span><br><span class="line">                formatString = &quot;yyyy-MM-dd hh:mm:ss.SSS&quot;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (formatString == null) &#123;</span><br><span class="line">                nextDataType = CellDataType.NULL;</span><br><span class="line">                formatString = BuiltinFormats.getBuiltinFormat(formatIndex);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 对解析出来的数据进行类型处理</span><br><span class="line">     * </span><br><span class="line">     * @param value</span><br><span class="line">     *            单元格的值（这时候是一串数字）</span><br><span class="line">     * @param thisStr</span><br><span class="line">     *            一个空字符串</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public String getDataValue(String value, String thisStr) &#123;</span><br><span class="line">        switch (nextDataType) &#123;</span><br><span class="line">        // 这几个的顺序不能随便交换，交换了很可能会导致数据错误</span><br><span class="line">        case BOOL:</span><br><span class="line">            char first = value.charAt(0);</span><br><span class="line">            thisStr = first == &apos;0&apos; ? &quot;FALSE&quot; : &quot;TRUE&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case ERROR:</span><br><span class="line">            thisStr = &quot;\&quot;ERROR:&quot; + value.toString() + &apos;&quot;&apos;;</span><br><span class="line">            break;</span><br><span class="line">        case FORMULA:</span><br><span class="line">            thisStr = &apos;&quot;&apos; + value.toString() + &apos;&quot;&apos;;</span><br><span class="line">            break;</span><br><span class="line">        case INLINESTR:</span><br><span class="line">            XSSFRichTextString rtsi = new XSSFRichTextString(value.toString());</span><br><span class="line"></span><br><span class="line">            thisStr = rtsi.toString();</span><br><span class="line">            rtsi = null;</span><br><span class="line">            break;</span><br><span class="line">        case SSTINDEX:</span><br><span class="line">            String sstIndex = value.toString();</span><br><span class="line">            try &#123;</span><br><span class="line">                int idx = Integer.parseInt(sstIndex);</span><br><span class="line">                XSSFRichTextString rtss = new XSSFRichTextString(sst.getEntryAt(idx));</span><br><span class="line">                thisStr = rtss.toString();</span><br><span class="line">                rtss = null;</span><br><span class="line">            &#125; catch (NumberFormatException ex) &#123;</span><br><span class="line">                thisStr = value.toString();</span><br><span class="line">            &#125;</span><br><span class="line">            break;</span><br><span class="line">        case NUMBER:</span><br><span class="line">            if (formatString != null) &#123;</span><br><span class="line">                thisStr = formatter.formatRawCellContents(Double.parseDouble(value), formatIndex, formatString).trim();</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                thisStr = value;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            thisStr = thisStr.replace(&quot;_&quot;, &quot;&quot;).trim();</span><br><span class="line">            break;</span><br><span class="line">        case DATE:</span><br><span class="line">            thisStr = formatter.formatRawCellContents(Double.parseDouble(value), formatIndex, formatString);</span><br><span class="line"></span><br><span class="line">            // 对日期字符串作特殊处理</span><br><span class="line">            thisStr = thisStr.replace(&quot; &quot;, &quot;T&quot;);</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            thisStr = &quot; &quot;;</span><br><span class="line"></span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return thisStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void endElement(String uri, String localName, String name) throws SAXException &#123;</span><br><span class="line">        // 根据SST的索引值的到单元格的真正要存储的字符串</span><br><span class="line">        // 这时characters()方法可能会被调用多次</span><br><span class="line">        if (nextIsString  &amp;&amp;  StringUtils.isNotEmpty(lastContents) &amp;&amp; StringUtils.isNumeric(lastContents)) &#123;</span><br><span class="line">            int idx = Integer.parseInt(lastContents);</span><br><span class="line">            lastContents = new XSSFRichTextString(sst.getEntryAt(idx)).toString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // t元素也包含字符串</span><br><span class="line">        if (isTElement) &#123;</span><br><span class="line">            // 将单元格内容加入rowlist中，在这之前先去掉字符串前后的空白符</span><br><span class="line">            String value = lastContents.trim();</span><br><span class="line">            rowlist.add(curCol, value);</span><br><span class="line">            curCol++;</span><br><span class="line">            isTElement = false;</span><br><span class="line">        &#125; else if (&quot;v&quot;.equals(name)) &#123;</span><br><span class="line">            // v =&gt; 单元格的值，如果单元格是字符串则v标签的值为该字符串在SST中的索引</span><br><span class="line">            String value = this.getDataValue(lastContents.trim(), &quot;&quot;);</span><br><span class="line">            // 补全单元格之间的空单元格</span><br><span class="line">//            if (!ref.equals(preRef)) &#123;</span><br><span class="line">//                int len = countNullCell(ref, preRef);</span><br><span class="line">//                for (int i = 0; i &lt; len; i++) &#123;</span><br><span class="line">//                    rowlist.add(curCol, &quot;&quot;);</span><br><span class="line">//                    curCol++;</span><br><span class="line">//                &#125;</span><br><span class="line">//            &#125;</span><br><span class="line">//            rowlist.add(curCol, value);</span><br><span class="line">//            curCol++;</span><br><span class="line">         // 以下是核心算法，在同一行内，若后一次比前一次读取的列序号相差大于1，证明中间没有读到值</span><br><span class="line">            // 按照.xlsx底层是xml描述文件原理，此时对应xml中&quot;空值&quot;情况</span><br><span class="line">            if(thisColumn - lastColumnNumber &gt; 1)&#123;</span><br><span class="line">                flag = true ;</span><br><span class="line">            &#125;</span><br><span class="line">            for (int i = lastColumnNumber; i &lt; thisColumn; ++i)&#123;</span><br><span class="line">                if(flag &amp;&amp; i &gt; lastColumnNumber)&#123;</span><br><span class="line">                    rowlist.add(i, &quot;&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // Might be the empty string.</span><br><span class="line">            rowlist.add(thisColumn, value);</span><br><span class="line"></span><br><span class="line">            // Update column</span><br><span class="line">            if (thisColumn &gt; -1)&#123;</span><br><span class="line">                lastColumnNumber = thisColumn;</span><br><span class="line">            &#125;</span><br><span class="line">                </span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // 如果标签名称为 row ，这说明已到行尾，调用 optRows() 方法</span><br><span class="line">            if (name.equals(&quot;row&quot;)) &#123;</span><br><span class="line">                // 默认第一行为表头，以该行单元格数目为最大数目</span><br><span class="line">                if (curRow == 0) &#123;</span><br><span class="line">                    maxRef = ref;</span><br><span class="line">                    int firstDigit = -1;</span><br><span class="line">                    for (int c = 0; c &lt; maxRef.length(); ++c) &#123;</span><br><span class="line">                        if (Character.isDigit(maxRef.charAt(c))) &#123;</span><br><span class="line">                            firstDigit = c;</span><br><span class="line">                            break;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                  maxClumn = nameToColumn(maxRef.substring(0, firstDigit));</span><br><span class="line">                &#125;</span><br><span class="line">                // 补全一行尾部可能缺失的单元格</span><br><span class="line">                if (maxRef != null) &#123;</span><br><span class="line">                if (lastColumnNumber == -1) &#123;</span><br><span class="line">                   lastColumnNumber = 0;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                for (int i = lastColumnNumber; i &lt; maxClumn; i++) &#123;</span><br><span class="line">                rowlist.add(&quot;&quot;);</span><br><span class="line">                lastColumnNumber++;</span><br><span class="line">                &#125;</span><br><span class="line">//                    int len = countNullCell(maxRef, ref);</span><br><span class="line">//                    </span><br><span class="line">//                    for (int i = 0; i &lt;= len; i++) &#123;</span><br><span class="line">//                    rowlist.add(thisColumn+1, &quot;&quot;);</span><br><span class="line">//                        thisColumn++;</span><br><span class="line">//                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                getRows(sheetIndex, curRow, rowlist);</span><br><span class="line">                rowlist.clear();</span><br><span class="line">                curRow++;</span><br><span class="line">                flag = false ;</span><br><span class="line">                // We&apos;re onto a new row</span><br><span class="line">                lastColumnNumber = -1;</span><br><span class="line">                thisColumn = 0;</span><br><span class="line">                ref = null;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 计算两个单元格之间的单元格数目(同一行)</span><br><span class="line">     * </span><br><span class="line">     * @param ref</span><br><span class="line">     * @param preRef</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public int countNullCell(String ref, String preRef) &#123;</span><br><span class="line">        // excel2007最大行数是1048576，最大列数是16384，最后一列列名是XFD</span><br><span class="line">        String xfd = ref.replaceAll(&quot;\\d+&quot;, &quot;&quot;);</span><br><span class="line">        String xfd_1 = preRef.replaceAll(&quot;\\d+&quot;, &quot;&quot;);</span><br><span class="line"></span><br><span class="line">        xfd = fillChar(xfd, 3, &apos;@&apos;, true);</span><br><span class="line">        xfd_1 = fillChar(xfd_1, 3, &apos;@&apos;, true);</span><br><span class="line"></span><br><span class="line">        char[] letter = xfd.toCharArray();</span><br><span class="line">        char[] letter_1 = xfd_1.toCharArray();</span><br><span class="line">        int res = (letter[0] - letter_1[0]) * 26 * 26 + (letter[1] - letter_1[1]) * 26 + (letter[2] - letter_1[2]);</span><br><span class="line">        return res - 1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 字符串的填充</span><br><span class="line">     * </span><br><span class="line">     * @param str</span><br><span class="line">     * @param len</span><br><span class="line">     * @param let</span><br><span class="line">     * @param isPre</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    String fillChar(String str, int len, char let, boolean isPre) &#123;</span><br><span class="line">        int len_1 = str.length();</span><br><span class="line">        if (len_1 &lt; len) &#123;</span><br><span class="line">            if (isPre) &#123;</span><br><span class="line">                for (int i = 0; i &lt; (len - len_1); i++) &#123;</span><br><span class="line">                    str = let + str;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                for (int i = 0; i &lt; (len - len_1); i++) &#123;</span><br><span class="line">                    str = str + let;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void characters(char[] ch, int start, int length) throws SAXException &#123;</span><br><span class="line">        // 得到单元格内容的值</span><br><span class="line">        lastContents += new String(ch, start, length);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /** </span><br><span class="line">     * 获取行数据回调 </span><br><span class="line">     * @param sheetIndex </span><br><span class="line">     * @param curRow </span><br><span class="line">     * @param rowList </span><br><span class="line">     */ </span><br><span class="line">public abstract void getRows(int sheetIndex, int curRow, List&lt;String&gt; rowList);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-2003-Reader&quot;&gt;&lt;a href=&quot;#1-2003-Reader&quot; class=&quot;headerlink&quot; title=&quot;1.2003 Reader&quot;&gt;&lt;/a&gt;1.2003 Reader&lt;/h1&gt;
    
    </summary>
    
      <category term="excel" scheme="https://sunshinehub.github.io/categories/excel/"/>
    
    
      <category term="java" scheme="https://sunshinehub.github.io/tags/java/"/>
    
      <category term="excel" scheme="https://sunshinehub.github.io/tags/excel/"/>
    
  </entry>
  
  <entry>
    <title>导出CSV文档demo</title>
    <link href="https://sunshinehub.github.io/2017/07/28/%E5%AF%BC%E5%87%BACSV%E6%96%87%E6%A1%A3demo/"/>
    <id>https://sunshinehub.github.io/2017/07/28/导出CSV文档demo/</id>
    <published>2017-07-28T08:30:00.000Z</published>
    <updated>2018-10-25T06:31:14.402Z</updated>
    
    <content type="html"><![CDATA[<h1 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h1><p>相信大家对于后台导出数据到excel表的需求很熟悉的。最近在开发项目过程中，就有用户的导入导出功能。开始我思路是用户导出导入都使用excel格式，但是到后面发现，其实在导出大量数据的时候，excel表是有很大局性的。一次导出10W条数据的时候，发现导出为excel失败，查看错误信息就是excel表对于数据的行数有限制，excel2003是65535条，excel2007会更多(还是会有限制)。考虑到管理员电脑的excel版本有高有低（必须兼容最低版本03），加上导出这么多数据，内存占用会比较大，弄不好会出现内存泄漏。随着用户量的不断增加，导出为excel显得越来不可取。于是就采用导出为csv格式，加上csv可以使用excel表打开，这看来是不错的做法。</p><h2 id="什么是CSV"><a href="#什么是CSV" class="headerlink" title="什么是CSV"></a>什么是CSV</h2><p>那什么是csv？格式又是怎么样的呢？<br>CSV：逗号分隔值（Comma-Separated Values，CSV，有时也称为字符分隔值，因为分隔字符也可以不是逗号），<br>其文件以纯文本形式存储表格数据（数字和文本）。纯文本意味着该文件是一个字符序列，不含必须像二进制数<br>字那样被解读的数据。CSV文件由任意数目的记录组成，记录间以某种换行符分隔；每条记录由字段组成，字段<br>间的分隔符是其它字符或字符串，最常见的是逗号或制表符。通常，所有记录都有完全相同的字段序列。通常都<br>是纯文本文件。<br>给大家举例子：</p><pre><code>用户昵称,用户账号,用户等级  圣诞老人1,13800138000,VIP7  圣诞老人2,13800138000,VIP7  圣诞老人3,13800138000,VIP8</code></pre><p>代码实现<br>源码<br>这里结合代码给大家讲解一下一个具体demo的实现，不需要依赖任何jar。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">@RequestMapping(&quot;monitorCustomerTeamSpeechExport&quot;)</span><br><span class="line">public void monitorCustomerTeamSpeechExport(HttpServletResponse response, Model model,CallHistoryQuery query)&#123;</span><br><span class="line">try &#123;</span><br><span class="line">if (query.getCallDurationMin()!=null) &#123;</span><br><span class="line">query.setCallDurationMin((query.getCallDurationMin())*60);</span><br><span class="line">&#125;</span><br><span class="line">if (query.getCallDurationMax()!=null) &#123;</span><br><span class="line">query.setCallDurationMax((query.getCallDurationMax())*60);</span><br><span class="line">&#125;</span><br><span class="line">query.setIsExport(1);</span><br><span class="line">query.setPerItems(1);</span><br><span class="line">query.setCurrPage(1);</span><br><span class="line">query.setOrderBy(&quot;time_from DESC&quot;);</span><br><span class="line">query.initPagination();</span><br><span class="line"></span><br><span class="line">com.tj.plateform.base.call.Pagination&lt;CallHistory&gt; queryCallHistory = callHistoryService.queryCallHistory(query);</span><br><span class="line">int totalRecord = queryCallHistory.getTotalRecord();</span><br><span class="line">if (totalRecord&gt;60000) &#123;</span><br><span class="line">totalRecord=60000;</span><br><span class="line">&#125;</span><br><span class="line">int currPage = 1;</span><br><span class="line">int pageSize=5000;</span><br><span class="line">int totalPage = (totalRecord + pageSize -1) / pageSize;</span><br><span class="line">String title= &quot;日期,开始时间,结束时间,耗时,客服名称,客户,操作类型,单价,费用,商家名称,商家电话,录音地址\n&quot;;</span><br><span class="line">ByteArrayOutputStream baos = new ByteArrayOutputStream();</span><br><span class="line">baos.write(239);   // 0xEF  </span><br><span class="line">baos.write(187);   // 0xBB  </span><br><span class="line">baos.write(191);</span><br><span class="line">BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(baos,&quot;UTF-8&quot;));</span><br><span class="line">bw.write(title);</span><br><span class="line">query.setPerItems(pageSize);</span><br><span class="line">long forstart = System.currentTimeMillis();</span><br><span class="line">for(; currPage&lt;=totalPage; currPage++) &#123;</span><br><span class="line">query.setCurrPage(currPage);</span><br><span class="line">query.initPagination();</span><br><span class="line">long startQuery = System.currentTimeMillis();</span><br><span class="line">queryCallHistory = callHistoryService.queryCallHistory(query);</span><br><span class="line">long endQuery = System.currentTimeMillis();</span><br><span class="line">System.out.println(&quot;-------------------查询需要时间： &quot;+(endQuery-startQuery)+&quot;--------------------&quot;);</span><br><span class="line">if (queryCallHistory.getList() != null) &#123;</span><br><span class="line">long startimport = System.currentTimeMillis();</span><br><span class="line">exportCSV(bw,queryCallHistory.getList());</span><br><span class="line">long endImport = System.currentTimeMillis();</span><br><span class="line">System.out.println(&quot;-------------------写入2000条需要时间： &quot;+(endImport-startimport)+&quot;--------------------&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">long endFor = System.currentTimeMillis();</span><br><span class="line">System.out.println(&quot;-------------------for循环需要时间： &quot;+(endFor-forstart)+&quot;--------------------&quot;);</span><br><span class="line">bw.flush();</span><br><span class="line">byte[] data = baos.toByteArray();</span><br><span class="line">String fileName = &quot;export_&quot;+DateUtil.getCurrDateTime(&quot;yyyy-MM-dd&quot;);</span><br><span class="line">response.setHeader(&quot;Content-disposition&quot;, &quot;attachment; filename=&quot;</span><br><span class="line">+ fileName + &quot;.csv&quot;);// 设定输出文件头</span><br><span class="line">response.setContentType(&quot;application/csv&quot;);// 定义输出类型</span><br><span class="line">response.getOutputStream().write(data, 0, data.length);</span><br><span class="line">bw.close();</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">logger.error(&quot;导出异常&quot;, e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void exportCSV(BufferedWriter bw, List&lt;CallHistory&gt; data) throws IOException&#123;</span><br><span class="line">for (CallHistory mminfo : data) &#123;</span><br><span class="line">StringBuffer sb = new StringBuffer();</span><br><span class="line">sb.append(DateUtil.converDate2Str(mminfo.getTimeFrom(), &quot;yyyy-MM-dd&quot;)+&quot;,&quot;);</span><br><span class="line">sb.append(DateUtil.converDate2Str(mminfo.getTimeFrom(), &quot;HH:mm:ss&quot;)+&quot;,&quot;);</span><br><span class="line">sb.append(DateUtil.converDate2Str(mminfo.getTimeTo(), &quot;HH:mm:ss&quot;)+&quot;,&quot;);</span><br><span class="line">sb.append(secondByminute(mminfo.getInteval())+&quot;,&quot;);</span><br><span class="line">sb.append(mminfo.getAgentName()+&quot;,&quot;);</span><br><span class="line">sb.append( &quot;0&quot;.equals(mminfo.getCallType()) ? mminfo.getCaller()+&quot;,&quot; : mminfo.getCalled()+&quot;,&quot;);</span><br><span class="line">sb.append( &quot;0&quot;.equals(mminfo.getCallType()) ? &quot;接听,&quot; : &quot;外呼,&quot;);</span><br><span class="line">if(mminfo.getPrice() == null) &#123;</span><br><span class="line">sb.append(&quot;￥0.00/min,&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">Double prices = mminfo.getPrice().doubleValue()/100.0;</span><br><span class="line">sb.append(&quot;￥&quot;+replaceAllZero(prices.toString())+&quot;/min,&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if(mminfo.getFee() == null) &#123;</span><br><span class="line">sb.append(&quot;￥0.00/min,&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">Double fees = mminfo.getFee().doubleValue()/100.0;</span><br><span class="line">sb.append(&quot;￥&quot;+replaceAllZero(fees.toString())+&quot;/min,&quot;);</span><br><span class="line">&#125;</span><br><span class="line">sb.append(mminfo.getTitle()+&quot;,&quot;);</span><br><span class="line">sb.append(mminfo.getPhoneNumber()+&quot;,&quot;);</span><br><span class="line">sb.append(mminfo.getRecordUrl()+&quot;\n&quot;);</span><br><span class="line">bw.write(sb.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;绪论&quot;&gt;&lt;a href=&quot;#绪论&quot; class=&quot;headerlink&quot; title=&quot;绪论&quot;&gt;&lt;/a&gt;绪论&lt;/h1&gt;&lt;p&gt;相信大家对于后台导出数据到excel表的需求很熟悉的。最近在开发项目过程中，就有用户的导入导出功能。开始我思路是用户导出导入都使用excel
      
    
    </summary>
    
      <category term="csv" scheme="https://sunshinehub.github.io/categories/csv/"/>
    
    
      <category term="java" scheme="https://sunshinehub.github.io/tags/java/"/>
    
      <category term="csv" scheme="https://sunshinehub.github.io/tags/csv/"/>
    
  </entry>
  
</feed>
